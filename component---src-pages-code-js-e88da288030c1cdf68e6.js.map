{"version":3,"sources":["webpack:///./src/components/projects.js","webpack:///./src/pages/code.js"],"names":["Projects","data","useStyles","projectHero","projectHeroContainer","projectBody","Fragment","Grid","container","direction","spacing","item","md","xs","className","to","fluid","whatshouldireadprimary","childImageSharp","Typography","variant","scaffoldingprimary","mxbialostocki","Code","title","sm"],"mappings":"oOA6EeA,EArEE,WACf,IAAMC,EAAI,OADW,EA2BsCC,cAAnDC,EA3Ba,EA2BbA,YAAaC,EA3BA,EA2BAA,qBAAsBC,EA3BtB,EA2BsBA,YAE3C,OACE,kBAAC,IAAMC,SAAP,KACE,kBAACC,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,MAAMC,QAAS,GAEvC,kBAACH,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,EAAGC,GAAI,GAAIC,UAAWV,GACnC,kBAAC,IAAD,CAAMW,GAAG,kDACP,kBAAC,IAAD,CAAKC,MAAOf,EAAKgB,uBAAuBC,gBAAgBF,MAAOF,UAAWX,IAC1E,kBAACgB,EAAA,EAAD,CAAYC,QAAQ,KAAKN,UAAWT,GAApC,sBACA,kBAACc,EAAA,EAAD,CAAYC,QAAQ,QAAQN,UAAWT,GAAvC,4BAEF,kBAAC,IAAD,CAAMU,GAAG,4CACP,kBAACI,EAAA,EAAD,CAAYC,QAAQ,QAAQN,UAAWT,GAAvC,YAGJ,kBAACE,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,EAAGC,GAAI,GAAIC,UAAWV,GACnC,kBAAC,IAAD,CAAMW,GAAG,0CACP,kBAAC,IAAD,CAAKC,MAAOf,EAAKoB,mBAAmBH,gBAAgBF,MAAOF,UAAWX,IACtE,kBAACgB,EAAA,EAAD,CAAYC,QAAQ,KAAKN,UAAWT,GAApC,eACA,kBAACc,EAAA,EAAD,CAAYC,QAAQ,QAAQN,UAAWT,GAAvC,8BAEF,kBAAC,IAAD,CAAMU,GAAG,gDACP,kBAACI,EAAA,EAAD,CAAYC,QAAQ,QAAQN,UAAWT,GAAvC,YAGJ,kBAACE,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,EAAGC,GAAI,GAAIC,UAAWV,GACnC,kBAAC,IAAD,CAAMW,GAAG,0CACP,kBAAC,IAAD,CAAKC,MAAOf,EAAKqB,cAAcJ,gBAAgBF,MAAOF,UAAWX,IACjE,kBAACgB,EAAA,EAAD,CAAYC,QAAQ,KAAKN,UAAWT,GAApC,aACA,kBAACc,EAAA,EAAD,CAAYC,QAAQ,QAAQN,UAAWT,GAAvC,8BAEF,kBAAC,IAAD,CAAMU,GAAG,gDACP,kBAACI,EAAA,EAAD,CAAYC,QAAQ,QAAQN,UAAWT,GAAvC,eCxCGkB,UArBF,kBACX,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKC,MAAM,SAEX,kBAACjB,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,MAAMC,QAAS,GAEvC,kBAACH,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,IACb,kBAACO,EAAA,EAAD,CAAYC,QAAQ,MAApB,uPAKF,kBAACb,EAAA,EAAD,CAAMI,MAAI,EAACc,GAAI,IACb,kBAAC,EAAD,W","file":"component---src-pages-code-js-e88da288030c1cdf68e6.js","sourcesContent":["import React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport Link from './link'\nimport { Grid, Typography } from '@material-ui/core'\nimport Img from \"gatsby-image\"\n\nimport useStyles from '../../plugins/custom-mui-theme/theme/custom'\n\nconst Projects = () => {\n  const data = useStaticQuery(graphql`\n  query {\n    scaffoldingprimary: file(relativePath: { eq: \"scaffolding-screenshot.png\" }) {\n      childImageSharp {\n        fluid(maxWidth: 900, quality: 100) {\n          ...GatsbyImageSharpFluid\n        }\n      }\n    }\n    whatshouldireadprimary: file(relativePath: { eq: \"whatshouldiread-screenshot.png\" }) {\n      childImageSharp {\n        fluid(maxWidth: 900, quality: 100) {\n          ...GatsbyImageSharpFluid\n        }\n      }\n    }\n    mxbialostocki: file(relativePath: { eq: \"mxbialostocki-screenshot.png\" }) {\n      childImageSharp {\n        fluid(maxWidth: 900, quality: 100) {\n          ...GatsbyImageSharpFluid\n        }\n      }\n    }\n  }\n  `)\n\n  const { projectHero, projectHeroContainer, projectBody } = useStyles()\n\n  return (    \n    <React.Fragment>\n      <Grid container direction='row' spacing={2} >\n        \n        <Grid item md={6} xs={12} className={projectHeroContainer}>\n          <Link to=\"https://whatshouldiread-cassidy.herokuapp.com/\">\n            <Img fluid={data.whatshouldireadprimary.childImageSharp.fluid} className={projectHero}/>\n            <Typography variant=\"h4\" className={projectBody}>what should i read</Typography>\n            <Typography variant=\"body1\" className={projectBody}>React, GraphQL, MongoDB</Typography>\n          </Link>\n          <Link to=\"https://github.com/mxbialostocki/cassidy\">\n            <Typography variant=\"body1\" className={projectBody}>github</Typography>\n          </Link>\n        </Grid>\n        <Grid item md={6} xs={12} className={projectHeroContainer}>\n          <Link to=\"https://scaffolding-xtw.herokuapp.com/\">\n            <Img fluid={data.scaffoldingprimary.childImageSharp.fluid} className={projectHero}/>\n            <Typography variant=\"h4\" className={projectBody}>scaffolding</Typography>\n            <Typography variant=\"body1\" className={projectBody}>React, Javascript, Poetry</Typography>\n          </Link>\n          <Link to=\"https://github.com/mxbialostocki/scaffolding\">\n            <Typography variant=\"body1\" className={projectBody}>github</Typography>\n          </Link>\n        </Grid>\n        <Grid item md={6} xs={12} className={projectHeroContainer}>\n          <Link to=\"https://scaffolding-xtw.herokuapp.com/\">\n            <Img fluid={data.mxbialostocki.childImageSharp.fluid} className={projectHero}/>\n            <Typography variant=\"h4\" className={projectBody}>this site</Typography>\n            <Typography variant=\"body1\" className={projectBody}>Gatsby, React, Javascript</Typography>\n          </Link>\n          <Link to=\"https://github.com/mxbialostocki/scaffolding\">\n            <Typography variant=\"body1\" className={projectBody}>github</Typography>\n          </Link>\n        </Grid>\n\n      </Grid>         \n    </React.Fragment>\n  )\n}\n\nexport default Projects\n","import React from \"react\"\nimport { Grid, Typography } from '@material-ui/core'\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport Projects from '../components/projects'\n\nconst Code = () => (\n  <Layout>\n    <SEO title=\"code\" />\n    \n    <Grid container direction=\"row\" spacing={4}>\n\n      <Grid item md={10}>\n        <Typography variant=\"h5\">\n          I'm a full-stack dev with a current focus on web development. My preferred resources are below, along with a few projects I've worked on lately. I'm always open to new challenges, so please get in touch with me if you'd like to work together.\n        </Typography>\n      </Grid>\n      \n      <Grid item sm={12}>\n        <Projects />\n      </Grid>\n\n    </Grid> \n    \n  </Layout>\n)\n\nexport default Code\n"],"sourceRoot":""}