{"version":3,"sources":["webpack:///./src/components/link.js","webpack:///./src/components/projectWSIR.js","webpack:///./src/components/projectScaffolding.js","webpack:///./src/pages/code.js"],"names":["Link","children","to","activeClassName","partiallyActive","other","test","href","target","rel","style","imgContainer","maxWidth","img","boxShadow","margin","ProjectWSIR","data","Fragment","Grid","container","direction","spacing","item","fluid","whatshouldireadprimary","childImageSharp","Typography","variant","ProjectScaffolding","padding","scaffoldingprimary","Code","title","justify"],"mappings":"kLA4BeA,IAxBF,SAAC,GAAkE,IAAhEC,EAA+D,EAA/DA,SAAUC,EAAqD,EAArDA,GAAIC,EAAiD,EAAjDA,gBAAiBC,EAAgC,EAAhCA,gBAAoBC,E,oIAAY,0DAK7E,MAHiB,YAAYC,KAAKJ,GAK9B,kBAAC,OAAD,eACEA,GAAIA,EACJC,gBAAiBA,EACjBC,gBAAiBA,GACbC,GAEHJ,GAKL,qCAAGM,KAAML,GAAQG,EAAjB,CAAwBG,OAAO,SAASC,IAAI,eACzCR,K,2KCjBDS,EAAQ,CACZC,aAAc,CACZC,SAAU,QAEZC,IAAK,CACHD,SAAU,MACVE,UAAW,oBACXC,OAAQ,WA0CGC,EAtCK,WAClB,IAAMC,EAAI,OAcV,OACE,kBAAC,IAAMC,SAAP,KACE,kBAACC,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,SAASC,QAAS,EAAGZ,MAAOA,EAAMC,cAExD,kBAACQ,EAAA,EAAD,CAAMI,MAAI,GACR,kBAAC,IAAD,CAAKC,MAAOP,EAAKQ,uBAAuBC,gBAAgBF,MAAOd,MAAOA,EAAMG,MAE5E,kBAAC,IAAD,CAAMX,GAAG,kDACP,kBAACyB,EAAA,EAAD,CAAYC,QAAQ,MAApB,uBAGF,kBAACD,EAAA,EAAD,CAAYC,QAAQ,MAApB,2BAEA,kBAAC,IAAD,CAAM1B,GAAG,4CACP,kBAACyB,EAAA,EAAD,oB,YCQCE,EAhDY,WACzB,IAAMZ,EAAI,OAYJP,EAAQ,CACZC,aAAc,CACZC,SAAU,OACVkB,QAAS,UAEXjB,IAAK,CACHD,SAAU,MACVE,UAAW,oBACXC,OAAQ,WAIZ,OACE,kBAAC,IAAMG,SAAP,KACE,kBAACC,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,SAASC,QAAS,EAAGZ,MAAOA,EAAMC,cAExD,kBAACQ,EAAA,EAAD,CAAMI,MAAI,GACR,kBAAC,IAAD,CAAKC,MAAOP,EAAKc,mBAAmBL,gBAAgBF,MAAOd,MAAOA,EAAMG,MAExE,kBAAC,IAAD,CAAMX,GAAG,0CACP,kBAACyB,EAAA,EAAD,CAAYC,QAAQ,MAApB,gBAGF,kBAACD,EAAA,EAAD,CAAYC,QAAQ,MAApB,6BAEA,kBAAC,IAAD,CAAM1B,GAAG,gDACP,kBAACyB,EAAA,EAAD,oBCfCK,UArBF,kBACX,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKC,MAAM,SACX,kBAACN,EAAA,EAAD,CAAYC,QAAQ,MAApB,QAGA,kBAACD,EAAA,EAAD,CAAYC,QAAQ,MAApB,oCAGA,kBAACT,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,SAASa,QAAQ,gBAAgBZ,QAAS,IAClE,kBAACH,EAAA,EAAD,CAAMI,MAAI,GACR,kBAAC,EAAD,OAEF,kBAACJ,EAAA,EAAD,CAAMI,MAAI,GACR,kBAAC,EAAD,QAGJ,kBAAC,OAAD,CAAMrB,GAAG,KAAT,c","file":"component---src-pages-code-js-df12fedfd3eca479930d.js","sourcesContent":["import React from 'react'\nimport { Link as GatsbyLink } from \"gatsby\"\n\n// Since DOM elements <a> cannot receive activeClassName and partiallyActive, destructure the prop here and pass it only to GatsbyLink\nconst Link = ({ children, to, activeClassName, partiallyActive, ...other }) => {\n  // This test assumes that any internal link (intended for Gatsby) will start with exactly one slash, and that anything else is external.\n  const internal = /^\\/(?!\\/)/.test(to)\n\n  // Use Gatsby Link for internal links, and <a> for others\n  if (internal) {\n    return (\n      <GatsbyLink\n        to={to}\n        activeClassName={activeClassName}\n        partiallyActive={partiallyActive}\n        {...other}\n      >\n        {children}\n      </GatsbyLink>\n    )\n  }\n  return (\n    <a href={to} {...other} target=\"_blank\" rel=\"noreferrer\">\n      {children}\n    </a>\n  )\n}\n\nexport default Link\n","import React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport Link from './link'\nimport { Grid, Typography } from '@material-ui/core'\nimport Img from \"gatsby-image\"\n\nconst style = {  \n  imgContainer: {\n    maxWidth: '100%'\n  },\n  img: {\n    maxWidth: '80%',\n    boxShadow: '5px 5px 10px grey',\n    margin: '2rem 0'\n  }\n}\n\nconst ProjectWSIR = () => {\n  const data = useStaticQuery(graphql`\n    query {\n      whatshouldireadprimary: file(relativePath: { eq: \"whatshouldiread-screenshot.png\" }) {\n        childImageSharp {\n          fluid(maxWidth: 900, quality: 100) {\n            ...GatsbyImageSharpFluid\n          }\n        }\n      }\n    }\n  `)\n\n  \n\n  return (    \n    <React.Fragment>\n      <Grid container direction=\"column\" spacing={2} style={style.imgContainer}>\n\n          <Grid item>\n            <Img fluid={data.whatshouldireadprimary.childImageSharp.fluid} style={style.img}/>\n          \n            <Link to=\"https://whatshouldiread-cassidy.herokuapp.com/\">\n              <Typography variant=\"h2\">what should i read</Typography>\n            </Link>\n\n            <Typography variant=\"h5\">React, GraphQL, MongoDB</Typography>\n\n            <Link to=\"https://github.com/mxbialostocki/cassidy\">\n              <Typography>github</Typography>\n            </Link>\n          </Grid>\n\n        </Grid>\n    </React.Fragment>\n  )\n}\n\nexport default ProjectWSIR\n","import React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport Link from './link'\nimport { Grid, Typography } from '@material-ui/core'\nimport Img from \"gatsby-image\"\n\nconst ProjectScaffolding = () => {\n  const data = useStaticQuery(graphql`\n    query {\n      scaffoldingprimary: file(relativePath: { eq: \"scaffolding-screenshot.png\" }) {\n        childImageSharp {\n          fluid(maxWidth: 900, quality: 100) {\n            ...GatsbyImageSharpFluid\n          }\n        }\n      }\n    }\n  `)\n\n  const style = {  \n    imgContainer: {\n      maxWidth: '100%',\n      padding: '20px 0'\n    },\n    img: {\n      maxWidth: '80%',\n      boxShadow: '5px 5px 10px grey',\n      margin: '2rem 0'\n    }\n  }\n\n  return (    \n    <React.Fragment>\n      <Grid container direction=\"column\" spacing={2} style={style.imgContainer}>\n\n          <Grid item>\n            <Img fluid={data.scaffoldingprimary.childImageSharp.fluid} style={style.img}/>\n          \n            <Link to=\"https://scaffolding-xtw.herokuapp.com/\">\n              <Typography variant=\"h2\">scaffolding</Typography>\n            </Link>\n\n            <Typography variant=\"h5\">React, Javascript, Poetry</Typography>\n\n            <Link to=\"https://github.com/mxbialostocki/scaffolding\">\n              <Typography>github</Typography>\n            </Link>\n          </Grid>\n          \n        </Grid>\n    </React.Fragment>\n  )\n}\n\nexport default ProjectScaffolding\n","import React from \"react\"\nimport { Link } from \"gatsby\"\nimport { Grid, Typography } from '@material-ui/core'\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport ProjectWSIR from '../components/projectWSIR'\nimport ProjectScaffolding from '../components/projectScaffolding'\n\nconst Code = () => (\n  <Layout>\n    <SEO title=\"code\" />\n    <Typography variant=\"h1\">\n      Code\n    </Typography>\n    <Typography variant=\"h4\">\n      Welcome to some cool code things\n    </Typography>\n    <Grid container direction=\"column\" justify=\"space-between\" spacing={10}>\n      <Grid item>\n        <ProjectWSIR />\n      </Grid>\n      <Grid item>\n        <ProjectScaffolding />\n      </Grid>\n    </Grid>    \n    <Link to=\"/\">go home</Link>\n  </Layout>\n)\n\nexport default Code\n"],"sourceRoot":""}